# Generated by Django 5.2.3 on 2025-07-09 03:33

from django.db import migrations

def crear_grupos_y_permisos(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    # Cargar ContentType del modelo User (custom)
    User = apps.get_model('users', 'User')
    user_ct = ContentType.objects.get_for_model(User)

    # Definir los roles y sus permisos (c√≥digos internos de Django)
    ROLES_PERMISOS = {
        'Administradores': ['add_user', 'change_user', 'delete_user', 'view_user'],
        'Cajeros': ['view_user'],
        'Clientes': [],
        'Proveedores': [],
    }

    for nombre_rol, codigos_permisos in ROLES_PERMISOS.items():
        grupo, creado = Group.objects.get_or_create(name=nombre_rol)

        permisos = Permission.objects.filter(
            content_type=user_ct,
            codename__in=codigos_permisos
        )

        grupo.permissions.set(permisos)
        print(f"{'Creado' if creado else 'Actualizado'} grupo: {nombre_rol} con permisos: {[p.codename for p in permisos]}")

def eliminar_grupos(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    roles = ['Administradores', 'Cajeros', 'Clientes', 'Proveedores']
    Group.objects.filter(name__in=roles).delete()

    
class Migration(migrations.Migration):

    dependencies = [
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(crear_grupos_y_permisos, reverse_code=eliminar_grupos),
    ]
